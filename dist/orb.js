(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Orb = {}));
})(this, (function (exports) { 'use strict';

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  // constant.js
  const Constant = {
    "PI": Math.PI,
    "RAD": Math.PI / 180,
    //RADIAN
    "AU": 149597870.700,
    //ASTRONOMICAL_UNIT(km)
    "RE": 6378.137,
    //EARTH_RADIUS(km)
    "LD": 384000,
    //LUNA_DISTANCE(km)
    "LY": Number("9.46073E+12"),
    //LIGHT_YEAR(km)
    "PC": Number("3.08568E+13"),
    //PARSEC(km)
    "G": Number("6.6740831E-11"),
    //GRAVITATIONAL_CONSTANT
    "GM": 2.9591220828559093 * Math.pow(10, -4),
    "Planets": ["Sun", "Mercury", "Venus", "Earth", "Moon", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune"],
    "Sun": {
      "radius": 1392038 / 2,
      "obliquity": 7.25,
      "mass": Number("1.989E+30"),
      "gm": Number("1.327124400189E+11")
    },
    "Mercury": {
      "radius": 4879.4 / 2,
      "obliquity": 0.027,
      "mass": Number("3.301E+23"),
      "gm": 220329
    },
    "Venus": {
      "radius": 12103.6 / 2,
      "obliquity": 177.36,
      "mass": Number("4.867E+24"),
      "gm": 3248599
    },
    "Earth": {
      "radius": 12756.3 / 2,
      "obliquity": 23.435,
      "mass": Number("5.972E+24"),
      "gm": Number("3.9860044189E+5")
    },
    "Moon": {
      "radius": 1737.4,
      "obliquity": 1.5424,
      "mass": Number("7.346E+22"),
      "gm": 4904.86959
    },
    "Mars": {
      "radius": 6794.4 / 2,
      "obliquity": 25,
      "mass": Number("6.417E+24"),
      "gm": 42828.9
    },
    "Jupiter": {
      "radius": 142984 / 2,
      "obliquity": 3.08,
      "mass": Number("1.899E+27"),
      "gm": 1266865349
    },
    "Saturn": {
      "radius": 120536 / 2,
      "obliquity": 26.7,
      "mass": Number("5.685E+26"),
      "gm": 379311879
    },
    "Uranus": {
      "radius": 51118 / 2,
      "obliquity": 97.9,
      "mass": Number("8.682E+26"),
      "gm": 57939399
    },
    "Neptune": {
      "radius": 49572 / 2,
      "obliquity": 29.6,
      "mass": Number("1.024E+26"),
      "gm": 68365299
    }
  };

  let Time = /*#__PURE__*/_createClass(function Time() {
    var _this = this;

    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();

    _classCallCheck(this, Time);

    _defineProperty(this, "time_in_day", function () {
      return _this.hours / 24 + _this.minutes / 1440 + _this.seconds / 86400 + _this.milliseconds / 86400000;
    });

    _defineProperty(this, "jd", function () {
      const year = _this.year;
      const month = _this.month;
      const day = _this.day;

      const time_in_day = _this.time_in_day();

      if (month <= 2) {
        year = year - 1;
        month = month + 12;
      }

      const julian_day = Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day - 1524.5;
      let transition_offset;

      if (julian_day < 2299160.5) {
        transition_offset = 0;
      } else {
        const tmp = Math.floor(year / 100);
        transition_offset = 2 - tmp + Math.floor(tmp / 4);
      }

      const jd = julian_day + transition_offset + time_in_day;
      return jd;
    });

    _defineProperty(this, "gmst", function () {
      const rad = Constant.RAD;
      const time_in_sec = _this.hours * 3600 + _this.minutes * 60 + _this.seconds + _this.milliseconds / 1000;

      const jd = _this.jd();

      const jd0 = jd - _this.time_in_day(); //gmst at 0:00


      const t = (jd0 - 2451545.0) / 36525;
      let gmst_at_zero = (24110.5484 + 8640184.812866 * t + 0.093104 * t * t + 0.0000062 * t * t * t) / 3600;

      if (gmst_at_zero > 24) {
        gmst_at_zero = gmst_at_zero % 24;
      } //gmst at target time


      let gmst = gmst_at_zero + time_in_sec * 1.00273790925 / 3600; //mean obliquity of the ecliptic

      const e = 23 + 26.0 / 60 + 21.448 / 3600 - 46.8150 / 3600 * t - 0.00059 / 3600 * t * t + 0.001813 / 3600 * t * t * t; //nutation in longitude

      const omega = 125.04452 - 1934.136261 * t + 0.0020708 * t * t + t * t * t / 450000;
      const long1 = 280.4665 + 36000.7698 * t;
      const long2 = 218.3165 + 481267.8813 * t;
      const phai = -17.20 * Math.sin(omega * rad) - -1.32 * Math.sin(2 * long1 * rad) - 0.23 * Math.sin(2 * long2 * rad) + 0.21 * Math.sin(2 * omega * rad);
      gmst = gmst + phai / 15 * Math.cos(e * rad) / 3600;

      if (gmst < 0) {
        gmst = gmst % 24 + 24;
      }

      if (gmst > 24) {
        gmst = gmst % 24;
      }

      return gmst;
    });

    this.date = date;
    this.year = date.getUTCFullYear();
    this.month = date.getUTCMonth() + 1;
    this.day = date.getUTCDate();
    this.hours = date.getUTCHours();
    this.minutes = date.getUTCMinutes();
    this.seconds = date.getUTCSeconds();
    this.milliseconds = date.getUTCMilliseconds();
  });

  exports.Constant = Constant;
  exports.Time = Time;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
